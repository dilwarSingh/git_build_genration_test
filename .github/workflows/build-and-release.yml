name: Build and Publish on github

on:
  workflow_run:
    workflows: [ "Build Artifacts" ]
    types:
      - completed

jobs:
  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Private Release
        run: gh release create tag_${{ github.run_number }} --generate-notes --title 'Release_${{ github.run_number }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Public Release
        run: gh release create tag_${{ github.run_number }} --generate-notes --title 'Release_${{ github.run_number }}' -R https://github.com/dilwarSingh/git_build_release
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_RELEASE_TEST_TOKEN }}

  build_linux:
    name: Add Linux Builds
    needs: create-github-release
    strategy:
      matrix:
        os: [ ubuntu-latest, ubuntu-20.04 ]
        include:
          - os: ubuntu-latest
            os_alias: 22
          - os: ubuntu-20.04
            os_alias: 20
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2.10.0
        with:
          channel: 'stable'
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:${{ hashFiles('**/pubspec.lock') }}" # optional, change this to force refresh cache
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      - run: flutter config --enable-linux-desktop
      - run: |
          echo CACHE-PATH=${{ steps.flutter-action.outputs.CACHE-PATH }}
          echo CACHE-KEY=${{ steps.flutter-action.outputs.CACHE-KEY }}
          echo CHANNEL=${{ steps.flutter-action.outputs.CHANNEL }}
          echo VERSION=${{ steps.flutter-action.outputs.VERSION }}
          echo ARCHITECTURE=${{ steps.flutter-action.outputs.ARCHITECTURE }}

      - name: Build Application
        run: flutter build linux --release

      - name: Create Zip Release Linux ${{ matrix.os_alias }}
        uses: TheDoctor0/zip-release@0.7.1
        with:
          filename: linux_release_${{ matrix.os_alias }}.zip
          path: build/linux/x64/release/bundle

      - name: Upload Private Build
        run: |
          gh release upload tag_${{ github.run_number }} './linux_release_${{ matrix.os_alias }}.zip#linux_release_${{ matrix.os_alias }}-v${{ github.run_number }}.zip' --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Public Build
        run: |
          gh release upload tag_${{ github.run_number }} './linux_release_${{ matrix.os_alias }}.zip#linux_release_${{ matrix.os_alias }}-v${{ github.run_number }}.zip' --clobber -R https://github.com/dilwarSingh/git_build_release
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_RELEASE_TEST_TOKEN }}

  build_windows:
    name: Add Windows Build
    runs-on: windows-latest
    needs: create-github-release
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2.10.0
        with:
          channel: 'stable'
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:${{ hashFiles('**/pubspec.lock') }}" # optional, change this to force refresh cache
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
      - run: flutter config --enable-windows-desktop

      - name: Build Application
        run: flutter build windows --release

      - name: zip release windows
        uses: TheDoctor0/zip-release@0.7.1
        with:
          filename: windows_release.zip
          path: build\windows\runner\Release

      - name: Upload Private Build
        run: |
          gh release upload tag_${{ github.run_number }} 'windows_release.zip#windows_release-v${{ github.run_number }}.zip' --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Public Build
        run: |
          gh release upload tag_${{ github.run_number }} 'windows_release.zip#windows_release-v${{ github.run_number }}.zip' --clobber -R https://github.com/dilwarSingh/git_build_release
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_RELEASE_TEST_TOKEN }}
