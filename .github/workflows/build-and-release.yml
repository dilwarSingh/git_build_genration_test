name: Build and Publish on github

on:
  workflow_run:
    workflows: [ "Build Artifacts" ]
    types:
      - completed

jobs:
  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Private Release
        run: gh release create tag_${{ github.run_number }} --generate-notes --title 'Release_${{ github.run_number }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Public Release
        run: gh release create tag_${{ github.run_number }} --generate-notes --title 'Release_${{ github.run_number }}' -R https://github.com/dilwarSingh/git_build_release
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_RELEASE_TEST_TOKEN }}

  build_release_desktop_apps:
    name: Build and publish Desktop release apps
    needs: create-github-release
    strategy:
      matrix:
        os: [ ubuntu-latest, ubuntu-20.04, windows-latest ]
        include:
          - os: ubuntu-latest
            os_ver: 22
            os_name: linux
            build_output: build/linux/x64/release/bundle
          - os: ubuntu-20.04
            os_ver: 20
            os_name: linux
            build_output: build/linux/x64/release/bundle
          - os: windows-latest
            os_ver: 2022
            os_name: windows
            build_output: build\windows\runner\Release
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2.10.0
        with:
          channel: 'stable'
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-${{ hashFiles('**/pubspec.lock') }}"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
      - if: ${{ matrix.os_name == 'linux' }}
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Build Application
        run: |
          flutter config --enable-${{ matrix.os_name }}-desktop
          flutter build ${{ matrix.os_name }} --release

      - name: Create Zip Release ${{ matrix.os_name }} ${{ matrix.os_ver }}
        uses: TheDoctor0/zip-release@0.7.1
        with:
          filename: ${{ matrix.os_name }}_release_${{ matrix.os_ver }}.zip
          path: ${{ matrix.build_output }}

      - name: Upload Private Build
        run: |
          gh release upload tag_${{ github.run_number }} './${{ matrix.os_name }}_release_${{ matrix.os_ver }}.zip#${{ matrix.os_name }}_release_${{ matrix.os_ver }}-v${{ github.run_number }}.zip' --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Public Build
        run: |
          gh release upload tag_${{ github.run_number }} './${{ matrix.os_name }}_release_${{ matrix.os_ver }}.zip#${{ matrix.os_name }}_release_${{ matrix.os_ver }}-v${{ github.run_number }}.zip' --clobber -R https://github.com/dilwarSingh/git_build_release
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_RELEASE_TEST_TOKEN }}


  build_web_artifacts:
    name: Build and publish web artifact
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2.10.0
        with:
          channel: 'stable'
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:${{ hashFiles('**/pubspec.lock') }}" # optional, change this to force refresh cache
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path

      - name: Build Web
        run: |
          flutter config --enable-web
          flutter build web --release

      - name: Create Zip Release web
        uses: TheDoctor0/zip-release@0.7.1
        with:
          filename: web_release.zip
          path: build/web

      - name: Upload Private Build
        run: |
          gh release upload tag_${{ github.run_number }} './web_release.zip#web_release-v${{ github.run_number }}.zip' --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Public Build
        run: |
          gh release upload tag_${{ github.run_number }} './web_release.zip#web_release-v${{ github.run_number }}.zip' --clobber -R https://github.com/dilwarSingh/git_build_release
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_RELEASE_TEST_TOKEN }}